{"version":3,"file":"static/js/669.b0dd548b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/PhonebookPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Button, Input, Label } from 'components/GlobalStyles';\nimport { FaPhoneSquareAlt } from 'react-icons/fa';\nimport { RiContactsBook2Fill } from 'react-icons/ri';\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const AddFormLabelIco = styled(Label)`\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const AddFormInput = styled(Input)`\n  min-width: 280px;\n  margin-top: 3px;\n  font-weight: 500;\n`;\n\nexport const AddFormBtn = styled(Button)`\n  margin-top: 12px;\n  padding: 10px 20px;\n  width: 120px;\n`;\n\nexport const UserIco = styled(RiContactsBook2Fill)`\n  position: absolute;\n  width: 28px;\n  height: 28px;\n`;\n\nexport const PhoneIco = styled(FaPhoneSquareAlt)`\n  position: absolute;\n  width: 28px;\n  height: 28px;\n  \n`;\n","import { useState } from 'react';\nimport * as S from './ContactForm.styled';\nimport {\n  useGetContactsQuery,\n  useAddContactMutation,\n} from 'redux/phonebook/contactsSlice';\nimport { Spinner } from 'components/Spinner';\nimport {\n  warningNotice,\n  successNotice,\n  failureNotice,\n} from 'features/notify/notify';\n\nexport const ContactForm = () => {\n  const { data: contacts } = useGetContactsQuery();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [addContact, { isLoading: isAdding }] = useAddContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (\n        contacts?.some(\n          contact => contact.name.toLowerCase() === name.toLowerCase()\n        )\n      ) {\n        warningNotice(`${name} is already exist`);\n        return;\n      }\n\n      await addContact({ name, number });\n      successNotice(`${name} successfully added`);\n      setName('');\n      setNumber('');\n    } catch (error) {\n      failureNotice(error.message);\n    }\n  };\n\n  return (\n    <S.Form onSubmit={handleSubmit}>\n      <S.AddFormLabelIco>\n        <S.UserIco />\n        <S.AddFormInput\n          placeholder=\"Name\"\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </S.AddFormLabelIco>\n\n      <S.AddFormLabelIco>\n        <S.PhoneIco />\n        <S.AddFormInput\n          placeholder=\"Number\"\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </S.AddFormLabelIco>\n      <S.AddFormBtn type=\"submit\" disabled={isAdding}>\n        {isAdding ? <Spinner size={15} /> : 'Add contact'}\n      </S.AddFormBtn>\n    </S.Form>\n  );\n};\n","import styled from 'styled-components';\nimport { Label, Input } from 'components/GlobalStyles';\nimport { RiUserSearchFill } from 'react-icons/ri';\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 30px 0 30px 0;\n  text-align: center;\n`;\n\nexport const FilterLabel = styled(Label)`\n  align-items: center;\n`;\n\nexport const FilterIco = styled(RiUserSearchFill)`\n  position: absolute;\n  width: 28px;\n  height: 28px;\n`;\n\nexport const FilteInput = styled(Input)`\n  width: 280px;\n  font-weight: 500;\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/phonebook/filterContactsSlice';\nimport * as S from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(state => state.filter.value);\n\n  const handleChangeInput = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <S.FilterWrapper>\n      <S.FilterLabel>\n        <S.FilterIco />\n        <S.FilteInput\n          placeholder=\"Find contacts by name\"\n          type=\"text\"\n          value={filterValue}\n          onChange={handleChangeInput}\n        />\n      </S.FilterLabel>\n    </S.FilterWrapper>\n  );\n};\n","import styled from 'styled-components';\nimport { Button } from 'components/GlobalStyles';\nimport { TiDelete } from 'react-icons/ti';\nimport { MdModeEditOutline } from 'react-icons/md';\n\nexport const ListItem = styled.li`\n  max-width: 450px;\n  margin: 0 auto;\n  padding: 10px 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 3px 1px -2px rgb(0 0 0 / 20%),\n    0px 2px 2px 0px rgb(0 0 0 / 14%), 0px 1px 5px 0px rgb(0 0 0 / 12%);\n  border-radius: 5px;\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n`;\n\nexport const ContactName = styled.span`\n  font-weight: 500;\n`;\n\nexport const ContactBtnsBox = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ContactBtn = styled(Button)`\n  width: 48px;\n  height: 42px;\n\n  &:not(:last-child) {\n    margin-right: 5px;\n  }\n`;\n\nexport const EditIco = styled(MdModeEditOutline)`\n  width: 28px;\n  height: 28px;\n  transition: all 0.2s ease-in-out;\n\n  ${ContactBtn}:hover &,\n  ${ContactBtn}:focus & {\n    fill: #f9ddb1;\n  }\n`;\n\nexport const DeleteIco = styled(TiDelete)`\n  width: 28px;\n  height: 28px;\n  transition: all 0.2s ease-in-out;\n\n  ${ContactBtn}:hover &,\n  ${ContactBtn}:focus & {\n    fill: #ffa590;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useNavigate } from 'react-router-dom';\nimport { useDeleteContactMutation } from 'redux/phonebook/contactsSlice';\nimport { Spinner } from 'components/Spinner';\nimport * as S from './ContactItem.styled';\nimport { Notify } from 'notiflix';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const navigate = useNavigate();\n  const [deleteContact, { isLoading: isDeleting, isSuccess, isError }] =\n    useDeleteContactMutation();\n\n  if (isSuccess) {\n    Notify.info(`${name} deleted`, {\n      clickToClose: true,\n      distance: '20px',\n      fontFamily: 'inherit',\n    });\n  }\n\n  return (\n    <S.ListItem key={id}>\n      {isError && (\n        <div>Something went wrong, please try again after reload</div>\n      )}\n      <p>\n        <S.ContactName>{name}: </S.ContactName>\n        {number}\n      </p>\n      <S.ContactBtnsBox>\n        <S.ContactBtn\n          onClick={() => navigate(`/phonebook/edit/${id}`)}\n          disabled={isDeleting}\n        >\n          {isDeleting ? <Spinner size={16} /> : <S.EditIco />}\n        </S.ContactBtn>\n        <S.ContactBtn onClick={() => deleteContact(id)} disabled={isDeleting}>\n          {isDeleting ? <Spinner size={16} /> : <S.DeleteIco />}\n        </S.ContactBtn>\n      </S.ContactBtnsBox>\n    </S.ListItem>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 12px;\n`;\n\n\n","import PropTypes from 'prop-types';\nimport { ContactItem } from 'components/ContactItem';\nimport { List } from './ContactList.styled';\n\nexport const ContactList = ({ contacts }) => {\n  return (\n    <List>\n      {contacts?.map(contact => (\n        <ContactItem key={contact.id} {...contact} />\n      ))}\n    </List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { Suspense, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useGetContactsQuery } from 'redux/phonebook/contactsSlice';\nimport { Container } from 'components/GlobalStyles';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Outlet } from 'react-router-dom';\nimport { Loader } from 'components/Loader';\n\nconst PhonebookPage = () => {\n  const { data: contacts = [], isError, isFetching } = useGetContactsQuery();\n  const filterValue = useSelector(state => state.filter.value);\n\n  const filteredContacts = useMemo(() => {\n    return contacts?.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filterValue.toLowerCase()) ?? []\n    );\n  }, [filterValue, contacts]);\n\n  return (\n    <Container>\n      <ContactForm />\n      {isFetching && <Loader />}\n      {contacts.length > 0 && (\n        <>\n          <Filter />\n          <ContactList contacts={filteredContacts} />\n        </>\n      )}\n      {isError && <div>Something went wrong...</div>}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default PhonebookPage;\n"],"names":["Form","styled","AddFormLabelIco","Label","AddFormInput","Input","AddFormBtn","Button","UserIco","RiContactsBook2Fill","PhoneIco","FaPhoneSquareAlt","ContactForm","contacts","useGetContactsQuery","data","useState","name","setName","number","setNumber","useAddContactMutation","addContact","isAdding","isLoading","handleChange","e","currentTarget","value","handleSubmit","preventDefault","some","contact","toLowerCase","warningNotice","successNotice","failureNotice","message","onSubmit","placeholder","onChange","type","pattern","title","required","disabled","Spinner","size","FilterWrapper","FilterLabel","FilterIco","RiUserSearchFill","FilteInput","Filter","dispatch","useDispatch","filterValue","useSelector","state","filter","setFilter","target","ListItem","ContactName","ContactBtnsBox","ContactBtn","EditIco","MdModeEditOutline","DeleteIco","TiDelete","ContactItem","id","navigate","useNavigate","useDeleteContactMutation","deleteContact","isDeleting","isSuccess","isError","Notify","clickToClose","distance","fontFamily","onClick","List","ContactList","map","isFetching","filteredContacts","useMemo","includes","Loader","length","Suspense","fallback"],"sourceRoot":""}