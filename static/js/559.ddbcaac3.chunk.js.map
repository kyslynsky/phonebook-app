{"version":3,"file":"static/js/559.ddbcaac3.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/EditContactForm/EditContactForm.jsx","components/EditContactModal/EditContactModal.styled.js","components/EditContactModal/EditContactModal.jsx","components/Spinner/Spinner.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Button, Input, Label } from 'components/GlobalStyles';\nimport { FaPhoneSquareAlt } from 'react-icons/fa';\nimport { RiContactsBook2Fill } from 'react-icons/ri';\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const AddFormLabelIco = styled(Label)`\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const AddFormInput = styled(Input)`\n  min-width: 280px;\n  margin-top: 3px;\n  font-weight: 500;\n`;\n\nexport const AddFormBtn = styled(Button)`\n  margin-top: 12px;\n  padding: 10px 20px;\n  width: 120px;\n`;\n\nexport const UserIco = styled(RiContactsBook2Fill)`\n  position: absolute;\n  width: 28px;\n  height: 28px;\n`;\n\nexport const PhoneIco = styled(FaPhoneSquareAlt)`\n  position: absolute;\n  width: 28px;\n  height: 28px;\n  \n`;\n","import PropTypes from 'prop-types';\nimport { Notify } from 'notiflix';\nimport { useState } from 'react';\nimport { Spinner } from 'components/Spinner';\nimport * as C from 'components/ContactForm/ContactForm.styled';\n\nexport const EditContactForm = ({\n  initValues = { name: '', phone: '' },\n  text,\n  onSubmit,\n  disable,\n}) => {\n  const [initName, setInitName] = useState(initValues.name);\n  const [initPhone, setInitPhone] = useState(initValues.phone);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setInitName(value);\n        break;\n\n      case 'phone':\n        setInitPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmitChanges = async e => {\n    e.preventDefault();\n\n    try {\n      await onSubmit({ name: initName, phone: initPhone });\n      Notify.info('Changes saved', {\n        clickToClose: true,\n        distance: '20px',\n        fontFamily: 'inherit',\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <C.Form onSubmit={handleSubmitChanges}>\n      <C.AddFormLabelIco>\n        <C.UserIco />\n        <C.AddFormInput\n          value={initName}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </C.AddFormLabelIco>\n      <C.AddFormLabelIco>\n        <C.PhoneIco />\n        <C.AddFormInput\n          value={initPhone}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </C.AddFormLabelIco>\n      <C.AddFormBtn type=\"submit\" disabled={disable}>\n        {disable ? <Spinner size={15} /> : text}\n      </C.AddFormBtn>\n    </C.Form>\n  );\n};\n\nEditContactForm.propTypes = {\n  initValues: PropTypes.object,\n  text: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  disable: PropTypes.bool.isRequired,\n};\n","import styled from 'styled-components';\nimport { GrClose } from 'react-icons/gr';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  padding: 28px;\n  background-color: #ddd;\n  border-radius: 4px;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 5px;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const CloseIco = styled(GrClose)`\n  width: 22px;\n  height: 22px;\n`;\n","import { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n  useGetContactByIdQuery,\n  useUpdateContactMutation,\n} from 'redux/phonebook/contactsSlice';\nimport { EditContactForm } from 'components/EditContactForm';\nimport * as S from './EditContactModal.styled';\n\nconst EditContactModal = () => {\n  const navigate = useNavigate();\n  const { contactId } = useParams();\n  const { data: contact } = useGetContactByIdQuery(contactId);\n  const [updateContact, { isLoading }] = useUpdateContactMutation();\n\n  const closeModal = () => navigate('/phonebook');\n\n  const hanldeUpdateContact = async inputs => {\n    try {\n      await updateContact({ id: contactId, ...inputs });\n      closeModal();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    const handleEscPress = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleEscPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscPress);\n    };\n  });\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  return (\n    <S.Overlay onClick={handleBackdropClick}>\n      <S.Modal>\n        <S.CloseBtn type=\"button\" onClick={closeModal}>\n          <S.CloseIco />\n        </S.CloseBtn>\n        {contact && (\n          <EditContactForm\n            initValues={{ name: contact.name, phone: contact.phone }}\n            text={'Save'}\n            onSubmit={hanldeUpdateContact}\n            disable={isLoading}\n          />\n        )}\n      </S.Modal>\n    </S.Overlay>\n  );\n};\n\nexport default EditContactModal;\n","import styled from 'styled-components';\nimport { keyframes } from 'styled-components';\nimport { CgSpinner } from 'react-icons/cg';\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n\n100% {\n  transform: rotate(1turn);\n}\n`;\n\nexport const Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`;\n\nSpinner.defaultProps = {\n  size: 40,\n};\n"],"names":["Form","styled","AddFormLabelIco","Label","AddFormInput","Input","AddFormBtn","Button","UserIco","RiContactsBook2Fill","PhoneIco","FaPhoneSquareAlt","EditContactForm","initValues","name","phone","text","onSubmit","disable","useState","initName","setInitName","initPhone","setInitPhone","handleChange","e","currentTarget","value","handleSubmitChanges","preventDefault","Notify","clickToClose","distance","fontFamily","console","log","onChange","type","pattern","title","required","disabled","Spinner","size","Overlay","Modal","CloseBtn","CloseIco","GrClose","navigate","useNavigate","contactId","useParams","contact","useGetContactByIdQuery","data","useUpdateContactMutation","updateContact","isLoading","closeModal","hanldeUpdateContact","inputs","id","useEffect","handleEscPress","code","window","addEventListener","removeEventListener","onClick","target","spin","keyframes","CgSpinner","defaultProps"],"sourceRoot":""}