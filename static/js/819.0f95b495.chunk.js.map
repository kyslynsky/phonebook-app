{"version":3,"file":"static/js/819.0f95b495.chunk.js","mappings":"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","sources":["components/LoginForm/LoginForm.styled.js","features/framer/containerAnimation.js","components/SignUpForm/SignUpForm.jsx","pages/SignUpPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Button, Input } from 'components/GlobalStyles';\n\nexport const FormWrapper = styled.div`\n  max-width: 80vw;\n  margin: 0 auto;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;\n  border-radius: 4px;\n\n  @media (min-width: 475px) and (max-width: 767px) {\n    max-width: 65vw;\n  }\n\n  @media screen and (min-width: 768px) {\n    max-width: 45vw;\n  }\n\n  @media screen and (min-width: 1024px) {\n    max-width: 30vw;\n  }\n`;\n\nexport const FormTitle = styled.h2`\n  margin-bottom: 15px;\n  text-align: center;\n  font-size: 2rem;\n  color: #2da8d8ff;\n`;\n\nexport const SignForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const PasswordInput = styled(Input)`\n  position: relative;\n  padding-left: 10px;\n  width: 100%;\n`;\n\nexport const LoginInput = styled(Input)`\n  padding-left: 10px;\n`;\n\nexport const RevealerWrapper = styled.span`\n  position: absolute;\n  right: 17%;\n  padding-top: 7px;\n  padding-right: 5px;\n  cursor: pointer;\n\n  @media (min-width: 475px) and (max-width: 767px) {\n    right: 23%;\n  }\n\n  @media screen and (min-width: 768px) {\n    right: 30%;\n  }\n\n  @media screen and (min-width: 1024px) {\n    right: 37%;\n  }\n`;\n\nexport const SignFormBtn = styled(Button)`\n  padding: 12px;\n`;\n\nexport const ErrorText = styled.p`\n  color: tomato;\n`;\n","export const containerAnimation = {\n  initial: { opacity: 0.2 },\n  animate: { opacity: 1, transition: { duration: 0.2, ease: 'circOut' } },\n  exit: { opacity: 0, transition: { duration: 0.2, ease: 'circIn' } },\n};\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useSignupUserMutation } from 'redux/auth/authApi';\nimport { Spinner } from 'components/Spinner';\nimport * as message from 'features/notify/notify';\nimport { ShownIco, HideIco } from 'components/GlobalStyles';\nimport * as C from 'components/LoginForm/LoginForm.styled';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().required('Email is required').email('Email is invalid'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(7, 'Password must be at least 7 characters')\n    .max(40, 'Password must not exceed 40 characters'),\n  confirmPassword: Yup.string()\n    .required('Confirm Password is required')\n    .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n});\n\nexport const SignUpForm = () => {\n  const [signUp, { isLoading }] = useSignupUserMutation();\n  const navigate = useNavigate();\n  const [shown, setShown] = useState(false);\n\n  const handleClickShow = () => {\n    setShown(!shown);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = data => {\n    const { name, email, password } = data;\n\n    signUp({ name, email, password })\n      .unwrap()\n      .then(payload => {\n        message.successNotice(`${payload.user.name} successfully registered`);\n        navigate('/phonebook');\n      })\n      .catch(() => message.failureNotice('User already exist'));\n  };\n\n  return (\n    <C.FormWrapper>\n      <C.FormTitle>Let's register</C.FormTitle>\n      <C.SignForm onSubmit={handleSubmit(onSubmit)}>\n        <C.LoginInput type=\"text\" placeholder=\"Name\" {...register('name')} />\n        <C.ErrorText>{errors.name?.message}</C.ErrorText>\n        <C.LoginInput placeholder=\"Email\" {...register('email')} />\n        <C.ErrorText>{errors.email?.message}</C.ErrorText>\n        <C.InputWrapper>\n          <C.PasswordInput\n            type={shown ? 'text' : 'password'}\n            placeholder=\"Password\"\n            {...register('password')}\n          />\n          <C.RevealerWrapper onClick={handleClickShow}>\n            {shown ? <HideIco /> : <ShownIco />}\n          </C.RevealerWrapper>\n        </C.InputWrapper>\n        <C.ErrorText>{errors.password?.message}</C.ErrorText>\n        <C.LoginInput\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          {...register('confirmPassword')}\n        />\n        <C.ErrorText>{errors.confirmPassword?.message}</C.ErrorText>\n        <C.SignFormBtn type=\"submit\" disabled={isLoading}>\n          {isLoading ? <Spinner size={15} /> : 'Sign up'}\n        </C.SignFormBtn>\n      </C.SignForm>\n    </C.FormWrapper>\n  );\n};\n","import { Container } from 'components/GlobalStyles';\nimport { SignUpForm } from 'components/SignUpForm';\nimport { containerAnimation } from 'features/framer/containerAnimation';\n\nconst SignUpPage = () => {\n  return (\n    <Container {...containerAnimation}>\n      <SignUpForm />\n    </Container>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["FormWrapper","styled","FormTitle","SignForm","InputWrapper","PasswordInput","Input","LoginInput","RevealerWrapper","SignFormBtn","Button","ErrorText","containerAnimation","initial","opacity","animate","transition","duration","ease","exit","validationSchema","Yup","shape","name","required","email","password","min","max","confirmPassword","oneOf","SignUpForm","useSignupUserMutation","signUp","isLoading","navigate","useNavigate","useState","shown","setShown","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","data","unwrap","then","payload","message","user","catch","type","placeholder","onClick","disabled","Spinner","size"],"sourceRoot":""}