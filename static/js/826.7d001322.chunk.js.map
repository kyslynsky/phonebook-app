{"version":3,"file":"static/js/826.7d001322.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/EditContactForm/EditContactForm.jsx","components/EditContactModal/EditContactModal.styled.js","features/framer/modalAnimation.js","components/EditContactModal/EditContactModal.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Button, Input, Label } from 'components/GlobalStyles';\nimport { FaPhoneSquareAlt } from 'react-icons/fa';\nimport { RiContactsBook2Fill } from 'react-icons/ri';\n\nexport const Form = styled.form`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const AddFormLabelIco = styled(Label)`\n  flex-direction: row;\n  align-items: center;\n`;\n\nexport const AddFormInput = styled(Input)`\n  min-width: 280px;\n  margin-top: 3px;\n  font-weight: 500;\n`;\n\nexport const AddFormBtn = styled(Button)`\n  margin-top: 12px;\n  padding: 10px 20px;\n  width: 120px;\n`;\n\nexport const UserIco = styled(RiContactsBook2Fill)`\n  position: absolute;\n  width: 28px;\n  height: 28px;\n`;\n\nexport const PhoneIco = styled(FaPhoneSquareAlt)`\n  position: absolute;\n  width: 28px;\n  height: 28px;\n  \n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { Spinner } from 'components/Spinner';\nimport * as C from 'components/ContactForm/ContactForm.styled';\nimport * as message from 'features/notify/notify';\n\nexport const EditContactForm = ({\n  initValues = { name: '', number: '' },\n  text,\n  onSubmit,\n  disable,\n}) => {\n  const [initName, setInitName] = useState(initValues.name);\n  const [initNumber, setInitNumber] = useState(initValues.number);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setInitName(value);\n        break;\n\n      case 'number':\n        setInitNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmitChanges = async e => {\n    e.preventDefault();\n\n    try {\n      await onSubmit({ name: initName, number: initNumber });\n      message.successNotice('Changes saved');\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <C.Form onSubmit={handleSubmitChanges}>\n      <C.AddFormLabelIco>\n        <C.UserIco />\n        <C.AddFormInput\n          value={initName}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </C.AddFormLabelIco>\n      <C.AddFormLabelIco>\n        <C.PhoneIco />\n        <C.AddFormInput\n          value={initNumber}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </C.AddFormLabelIco>\n      <C.AddFormBtn type=\"submit\" disabled={disable}>\n        {disable ? <Spinner size={15} /> : text}\n      </C.AddFormBtn>\n    </C.Form>\n  );\n};\n\nEditContactForm.propTypes = {\n  initValues: PropTypes.object,\n  text: PropTypes.string.isRequired,\n  onSubmit: PropTypes.func.isRequired,\n  disable: PropTypes.bool.isRequired,\n};\n","import styled from 'styled-components';\nimport { GrClose } from 'react-icons/gr';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.3);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Modal = styled.div`\n  position: relative;\n  padding: 45px 10px 28px;\n  background-color: #ddd;\n  border-radius: 4px;\n`;\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 5px;\n  background-color: transparent;\n  border: none;\n`;\n\nexport const CloseIco = styled(GrClose)`\n  width: 22px;\n  height: 22px;\n`;\n","export const overlayAnimation = {\n  initial: { opacity: 0.2 },\n  animate: { opacity: 1, transition: { duration: 0.5, ease: 'circOut' } },\n  exit: { opacity: 0, transition: { duration: 0.2, ease: 'circIn' } },\n};\n\nexport const modalAnimation = {\n  initial: { y: '50%' },\n  animate: { y: 0, transition: { duration: 0.2, ease: 'circOut' } },\n  exit: { y: '50%', transition: { duration: 0.2, ease: 'circIn' } },\n};\n","import { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport {\n  useGetContactsQuery,\n  useUpdateContactMutation,\n} from 'redux/phonebook/contactsSlice';\nimport { EditContactForm } from 'components/EditContactForm';\nimport * as S from './EditContactModal.styled';\nimport {\n  overlayAnimation,\n  modalAnimation,\n} from 'features/framer/modalAnimation';\nimport { motion } from 'framer-motion';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\n\nconst EditContactModal = () => {\n  const navigate = useNavigate();\n  const { contactId } = useParams();\n  const [updateContact, { isLoading }] = useUpdateContactMutation();\n  //\n  const { data } = useGetContactsQuery();\n\n  let contact = '';\n  const getContactById = async id => {\n    try {\n      contact = data?.find(obj => id === obj.id);\n      if (typeof contact === 'undefined') {\n        throw new Error(\"Contact doesn't exist\");\n      }\n      return contact;\n    } catch (error) {\n      Report.warning(\n        `${error.message}`,\n        'We are sorry, it`s removed permanently',\n        'Back to phonebook',\n\n        () => {\n          navigate('/phonebook', { replace: true });\n        },\n        {\n          fontFamily: 'Advent Pro',\n          backOverlay: false,\n        }\n      );\n    }\n  };\n\n  getContactById(contactId);\n\n  const hanldeUpdateContact = async inputs => {\n    try {\n      await updateContact({ id: contactId, ...inputs });\n      closeModal();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const closeModal = () => navigate('/phonebook');\n\n  useEffect(() => {\n    const handleEscPress = e => {\n      if (e.code === 'Escape') {\n        closeModal();\n      }\n    };\n    window.addEventListener('keydown', handleEscPress);\n\n    return () => {\n      window.removeEventListener('keydown', handleEscPress);\n    };\n  });\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      closeModal();\n    }\n  };\n\n  return (\n    <S.Overlay\n      as={motion.div}\n      {...overlayAnimation}\n      onClick={handleBackdropClick}\n    >\n      <S.Modal as={motion.div} {...modalAnimation}>\n        <S.CloseBtn type=\"button\" onClick={closeModal}>\n          <S.CloseIco />\n        </S.CloseBtn>\n        {contact && (\n          <EditContactForm\n            initValues={{ name: contact.name, number: contact.number }}\n            text={'Save'}\n            onSubmit={hanldeUpdateContact}\n            disable={isLoading}\n          />\n        )}\n      </S.Modal>\n    </S.Overlay>\n  );\n};\n\nexport default EditContactModal;\n"],"names":["Form","styled","AddFormLabelIco","Label","AddFormInput","Input","AddFormBtn","Button","UserIco","RiContactsBook2Fill","PhoneIco","FaPhoneSquareAlt","EditContactForm","initValues","name","number","text","onSubmit","disable","useState","initName","setInitName","initNumber","setInitNumber","handleChange","e","currentTarget","value","handleSubmitChanges","preventDefault","message","console","log","onChange","type","pattern","title","required","disabled","Spinner","size","Overlay","Modal","CloseBtn","CloseIco","GrClose","overlayAnimation","initial","opacity","animate","transition","duration","ease","exit","modalAnimation","y","navigate","useNavigate","contactId","useParams","useUpdateContactMutation","updateContact","isLoading","data","useGetContactsQuery","contact","getContactById","id","find","obj","Error","Report","replace","fontFamily","backOverlay","hanldeUpdateContact","inputs","closeModal","useEffect","handleEscPress","code","window","addEventListener","removeEventListener","as","motion","onClick","target"],"sourceRoot":""}