{"version":3,"file":"static/js/870.08a9565a.chunk.js","mappings":"iNAGaA,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,IAAPD,CAAH,yDAKRE,GAAUF,EAAAA,EAAAA,SAAOG,EAAAA,IAAPH,CAAH,wD,oOCEdI,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaG,SAAS,qBAAqBD,MAAM,oBACxDE,SAAUJ,EAAAA,KACPG,SAAS,wBACTE,IAAI,EAAG,0CACPC,IAAI,GAAI,4CAGAC,EAAY,WAAO,IAAD,IAC7B,GAA+BC,EAAAA,EAAAA,MAA/B,eAAOC,EAAP,KAAgBC,EAAhB,KAAgBA,UACVC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYnB,KAJtBoB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAKTE,EAAQ,mCAAG,WAAMC,GAAN,iFACTf,EAAMe,GACTC,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAA,0BAAyCD,EAAQE,KAAKC,OACtDnB,EAAS,aACV,IACAoB,OAAM,kBAAMH,EAAAA,GAAsB,oBAA5B,IAPM,2CAAH,sDAUd,OACE,4BACE,2CACA,kBAAML,SAAUH,EAAaG,GAA7B,WACE,0BAAOS,YAAY,SAAYb,EAAS,YACxC,iCAAIE,EAAOnB,aAAX,aAAI,EAAc0B,WAElB,4BACE,0BACEK,KAAMnB,EAAQ,OAAS,WACvBkB,YAAY,YACRb,EAAS,eAEf,iBAAMe,QAnCU,WACtBnB,GAAUD,EACX,EAiCO,SACGA,GAAQ,SAAC,IAAD,KAAiB,SAAC,IAAD,OAE5B,iCAAIO,EAAOjB,gBAAX,aAAI,EAAiBwB,cAGvB,mBAAQK,KAAK,SAASE,SAAUzB,EAAhC,SACGA,GAAY,SAAC0B,EAAA,EAAD,CAASC,KAAM,KAAS,eAK9C,EC3DD,EARkB,WAChB,OACE,SAAC,KAAD,WACE,SAAC9B,EAAD,KAGL,C","sources":["components/SignUpForm/SignUpForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { RiEyeLine, RiEyeCloseLine } from 'react-icons/ri';\n\nexport const ShownIco = styled(RiEyeLine)`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const HideIco = styled(RiEyeCloseLine)`\n  width: 28px;\n  height: 28px;\n`;\n","import { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useLoginMutation } from 'redux/auth/authApi';\nimport { Spinner } from 'components/Spinner';\nimport * as C from 'components/SignUpForm/SignUpForm.styled.js';\nimport * as message from 'features/notify/notify';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required('Email is required').email('Email is invalid'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(7, 'Password must be at least 7 characters')\n    .max(40, 'Password must not exceed 40 characters'),\n});\n\nexport const LoginForm = () => {\n  const [login, { isLoading }] = useLoginMutation();\n  const navigate = useNavigate();\n  const [shown, setShown] = useState(false);\n\n  const handleClickShow = () => {\n    setShown(!shown);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = async data => {\n    await login(data)\n      .unwrap()\n      .then(payload => {\n        message.successNotice(`Nice to see you ${payload.user.name}`);\n        navigate('/phonebook');\n      })\n      .catch(() => message.failureNotice('Check credentials'));\n  };\n\n  return (\n    <div>\n      <h2>Let's sign in</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input placeholder=\"Email\" {...register('email')} />\n        <p>{errors.email?.message}</p>\n\n        <div>\n          <input\n            type={shown ? 'text' : 'password'}\n            placeholder=\"Password\"\n            {...register('password')}\n          />\n          <span onClick={handleClickShow}>\n            {shown ? <C.ShownIco /> : <C.HideIco />}\n          </span>\n          <p>{errors.password?.message}</p>\n        </div>\n\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? <Spinner size={15} /> : 'Login'}\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { Container } from 'components/GlobalStyles';\nimport { LoginForm } from 'components/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["ShownIco","styled","RiEyeLine","HideIco","RiEyeCloseLine","validationSchema","Yup","shape","email","required","password","min","max","LoginForm","useLoginMutation","login","isLoading","navigate","useNavigate","useState","shown","setShown","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","data","unwrap","then","payload","message","user","name","catch","placeholder","type","onClick","disabled","Spinner","size"],"sourceRoot":""}