{"version":3,"file":"static/js/819.728534c4.chunk.js","mappings":"iNAGaA,GAAWC,EAAAA,EAAAA,SAAOC,EAAAA,IAAPD,CAAH,yDAKRE,GAAUF,EAAAA,EAAAA,SAAOG,EAAAA,IAAPH,CAAH,wD,uMCEdI,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,KAAMF,EAAAA,KAAaG,SAAS,oBAC5BC,MAAOJ,EAAAA,KAAaG,SAAS,qBAAqBC,MAAM,oBACxDC,SAAUL,EAAAA,KACPG,SAAS,wBACTG,IAAI,EAAG,0CACPC,IAAI,GAAI,0CACXC,gBAAiBR,EAAAA,KACdG,SAAS,gCACTM,MAAM,CAACT,EAAAA,GAAQ,YAAa,MAAO,qCAG3BU,EAAa,WAAO,IAAD,QAC9B,GAAgCC,EAAAA,EAAAA,MAAhC,eAAOC,EAAP,KAAiBC,EAAjB,KAAiBA,UACXC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYtB,KAJtBuB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAiBf,OACE,4BACE,4CACA,kBAAME,SAAUH,GAfH,SAAAI,GACf,IAAQzB,EAA0ByB,EAA1BzB,KAAME,EAAoBuB,EAApBvB,MAAOC,EAAasB,EAAbtB,SAErBO,EAAO,CAAEV,KAAAA,EAAME,MAAAA,EAAOC,SAAAA,IACnBuB,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAA,UAAyBD,EAAQE,KAAK9B,KAAtC,6BACAY,EAAS,aACV,IACAmB,OAAM,kBAAMF,EAAAA,GAAsB,qBAA5B,GACV,IAKG,WACE,0BAAOG,KAAK,OAAOC,YAAY,QAAWb,EAAS,WACnD,iCAAIE,EAAOtB,YAAX,aAAI,EAAa6B,WACjB,0BAAOI,YAAY,SAAYb,EAAS,YACxC,iCAAIE,EAAOpB,aAAX,aAAI,EAAc2B,WAClB,0BACEG,KAAMjB,EAAQ,OAAS,WACvBkB,YAAY,YACRb,EAAS,eAEf,iBAAMc,QArCY,WACtBlB,GAAUD,EACX,EAmCK,SACGA,GAAQ,SAAC,IAAD,KAAiB,SAAC,IAAD,OAE5B,iCAAIO,EAAOnB,gBAAX,aAAI,EAAiB0B,WACrB,0BACEG,KAAK,WACLC,YAAY,oBACRb,EAAS,sBAEf,iCAAIE,EAAOhB,uBAAX,aAAI,EAAwBuB,WAC5B,mBAAQG,KAAK,SAASG,SAAUxB,EAAhC,SACGA,GAAY,SAACyB,EAAA,EAAD,CAASC,KAAM,KAAS,iBAK9C,ECrED,EARmB,WACjB,OACE,SAAC,KAAD,WACE,SAAC7B,EAAD,KAGL,C","sources":["components/SignUpForm/SignUpForm.styled.js","components/SignUpForm/SignUpForm.jsx","pages/SignUpPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { RiEyeLine, RiEyeCloseLine } from 'react-icons/ri';\n\nexport const ShownIco = styled(RiEyeLine)`\n  width: 28px;\n  height: 28px;\n`;\n\nexport const HideIco = styled(RiEyeCloseLine)`\n  width: 28px;\n  height: 28px;\n`;\n","import { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useSignupUserMutation } from 'redux/auth/authApi';\nimport { Spinner } from 'components/Spinner';\nimport * as S from './SignUpForm.styled';\nimport * as message from 'features/notify/notify';\n\nconst validationSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  email: Yup.string().required('Email is required').email('Email is invalid'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(7, 'Password must be at least 7 characters')\n    .max(40, 'Password must not exceed 40 characters'),\n  confirmPassword: Yup.string()\n    .required('Confirm Password is required')\n    .oneOf([Yup.ref('password'), null], 'Confirm Password does not match'),\n});\n\nexport const SignUpForm = () => {\n  const [signUp, { isLoading }] = useSignupUserMutation();\n  const navigate = useNavigate();\n  const [shown, setShown] = useState(false);\n\n  const handleClickShow = () => {\n    setShown(!shown);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = data => {\n    const { name, email, password } = data;\n\n    signUp({ name, email, password })\n      .unwrap()\n      .then(payload => {\n        message.successNotice(`${payload.user.name} successfully registered`);\n        navigate('/phonebook');\n      })\n      .catch(() => message.failureNotice('User already exist'));\n  };\n\n  return (\n    <div>\n      <h2>Let's register</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input type=\"text\" placeholder=\"Name\" {...register('name')} />\n        <p>{errors.name?.message}</p>\n        <input placeholder=\"Email\" {...register('email')} />\n        <p>{errors.email?.message}</p>\n        <input\n          type={shown ? 'text' : 'password'}\n          placeholder=\"Password\"\n          {...register('password')}\n        />\n        <span onClick={handleClickShow}>\n          {shown ? <S.ShownIco /> : <S.HideIco />}\n        </span>\n        <p>{errors.password?.message}</p>\n        <input\n          type=\"password\"\n          placeholder=\"Confirm Password\"\n          {...register('confirmPassword')}\n        />\n        <p>{errors.confirmPassword?.message}</p>\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? <Spinner size={15} /> : 'Sign up'}\n        </button>\n      </form>\n    </div>\n  );\n};\n","import { Container } from 'components/GlobalStyles';\nimport { SignUpForm } from 'components/SignUpForm';\n\nconst SignUpPage = () => {\n  return (\n    <Container>\n      <SignUpForm />\n    </Container>\n  );\n};\n\nexport default SignUpPage;\n"],"names":["ShownIco","styled","RiEyeLine","HideIco","RiEyeCloseLine","validationSchema","Yup","shape","name","required","email","password","min","max","confirmPassword","oneOf","SignUpForm","useSignupUserMutation","signUp","isLoading","navigate","useNavigate","useState","shown","setShown","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","data","unwrap","then","payload","message","user","catch","type","placeholder","onClick","disabled","Spinner","size"],"sourceRoot":""}