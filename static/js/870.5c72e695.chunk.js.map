{"version":3,"file":"static/js/870.5c72e695.chunk.js","mappings":"wYAGaA,EAAcC,EAAAA,QAAAA,IAAH,wJAQXC,EAAYD,EAAAA,QAAAA,GAAH,sJAQTE,EAAWF,EAAAA,QAAAA,KAAH,mFAMRG,EAAeH,EAAAA,QAAAA,IAAH,kEAKZI,GAAgBJ,EAAAA,EAAAA,SAAOK,EAAAA,GAAPL,CAAH,sFAMbM,GAAaN,EAAAA,EAAAA,SAAOK,EAAAA,GAAPL,CAAH,+CAIVO,EAAkBP,EAAAA,QAAAA,KAAH,uGAOfQ,GAAcR,EAAAA,EAAAA,SAAOS,EAAAA,GAAPT,CAAH,0CAIXU,EAAYV,EAAAA,QAAAA,EAAH,yC,oOCxChBW,EAAmBC,EAAAA,KAAaC,MAAM,CAC1CC,MAAOF,EAAAA,KAAaG,SAAS,qBAAqBD,MAAM,oBACxDE,SAAUJ,EAAAA,KACPG,SAAS,wBACTE,IAAI,EAAG,0CACPC,IAAI,GAAI,4CAGAC,EAAY,WAAO,IAAD,IAC7B,GAA+BC,EAAAA,EAAAA,MAA/B,eAAOC,EAAP,KAAgBC,EAAhB,KAAgBA,UACVC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,WAAS,GAAnC,eAAOC,EAAP,KAAcC,EAAd,KAMA,GAIIC,EAAAA,EAAAA,IAAQ,CACVC,UAAUC,EAAAA,EAAAA,GAAYnB,KAJtBoB,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAKTE,EAAQ,mCAAG,WAAMC,GAAN,iFACTf,EAAMe,GACTC,SACAC,MAAK,SAAAC,GACJC,EAAAA,GAAA,0BAAyCD,EAAQE,KAAKC,OACtDnB,EAAS,aACV,IACAoB,OAAM,kBAAMH,EAAAA,GAAsB,oBAA5B,IAPM,2CAAH,sDAUd,OACE,UAAC,KAAD,YACE,SAAC,KAAD,6BACA,UAAC,KAAD,CAAYL,SAAUH,EAAaG,GAAnC,WACE,SAAC,MAAD,QAAcS,YAAY,SAAYb,EAAS,YAC/C,SAAC,IAAD,oBAAcE,EAAOnB,aAArB,aAAc,EAAc0B,WAC5B,UAAC,KAAD,YACE,SAAC,MAAD,QACEK,KAAMnB,EAAQ,OAAS,WACvBkB,YAAY,YACRb,EAAS,eAEf,SAAC,KAAD,CAAmBe,QAlCH,WACtBnB,GAAUD,EACX,EAgCO,SACGA,GAAQ,SAAC,KAAD,KAAc,SAAC,KAAD,UAG3B,SAAC,IAAD,oBAAcO,EAAOjB,gBAArB,aAAc,EAAiBwB,WAE/B,SAAC,KAAD,CAAeK,KAAK,SAASE,SAAUzB,EAAvC,SACGA,GAAY,SAAC0B,EAAA,EAAD,CAASC,KAAM,KAAS,eAK9C,EC3DD,EARkB,WAChB,OACE,SAAC,KAAD,WACE,SAAC9B,EAAD,KAGL,C","sources":["components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Button, Input } from 'components/GlobalStyles';\n\nexport const FormWrapper = styled.div`\n  max-width: 30vw;\n  margin: 0 auto;\n  padding: 20px;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 2px 8px;\n  border-radius: 4px;\n`;\n\nexport const FormTitle = styled.h2`\n  margin-bottom: 15px;\n  text-align: center;\n  font-family: 'Righteous', cursive;\n  font-size: 35px;\n  color: #2da8d8ff;\n`;\n\nexport const SignForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n`;\n\nexport const InputWrapper = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nexport const PasswordInput = styled(Input)`\n  position: relative;\n  padding-left: 10px;\n  width: 100%;\n`;\n\nexport const LoginInput = styled(Input)`\n  padding-left: 10px;\n`;\n\nexport const RevealerWrapper = styled.span`\n  position: absolute;\n  right: 37%;\n  padding-top: 5px;\n  cursor: pointer;\n`;\n\nexport const SignFormBtn = styled(Button)`\n  padding: 12px;\n`;\n\nexport const ErrorText = styled.p`\n  color: tomato;\n`;\n","import { useForm } from 'react-hook-form';\nimport { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as Yup from 'yup';\nimport { useLoginMutation } from 'redux/auth/authApi';\nimport { Spinner } from 'components/Spinner';\nimport * as message from 'features/notify/notify';\nimport { ShownIco, HideIco } from 'components/GlobalStyles';\nimport * as S from './LoginForm.styled';\n\nconst validationSchema = Yup.object().shape({\n  email: Yup.string().required('Email is required').email('Email is invalid'),\n  password: Yup.string()\n    .required('Password is required')\n    .min(7, 'Password must be at least 7 characters')\n    .max(40, 'Password must not exceed 40 characters'),\n});\n\nexport const LoginForm = () => {\n  const [login, { isLoading }] = useLoginMutation();\n  const navigate = useNavigate();\n  const [shown, setShown] = useState(false);\n\n  const handleClickShow = () => {\n    setShown(!shown);\n  };\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(validationSchema),\n  });\n\n  const onSubmit = async data => {\n    await login(data)\n      .unwrap()\n      .then(payload => {\n        message.successNotice(`Nice to see you ${payload.user.name}`);\n        navigate('/phonebook');\n      })\n      .catch(() => message.failureNotice('Check credentials'));\n  };\n\n  return (\n    <S.FormWrapper>\n      <S.FormTitle>Let's sign in</S.FormTitle>\n      <S.SignForm onSubmit={handleSubmit(onSubmit)}>\n        <S.LoginInput placeholder=\"Email\" {...register('email')} />\n        <S.ErrorText>{errors.email?.message}</S.ErrorText>\n        <S.InputWrapper>\n          <S.PasswordInput\n            type={shown ? 'text' : 'password'}\n            placeholder=\"Password\"\n            {...register('password')}\n          />\n          <S.RevealerWrapper onClick={handleClickShow}>\n            {shown ? <HideIco /> : <ShownIco />}\n          </S.RevealerWrapper>\n        </S.InputWrapper>\n        <S.ErrorText>{errors.password?.message}</S.ErrorText>\n\n        <S.SignFormBtn type=\"submit\" disabled={isLoading}>\n          {isLoading ? <Spinner size={15} /> : 'Login'}\n        </S.SignFormBtn>\n      </S.SignForm>\n    </S.FormWrapper>\n  );\n};\n","import { Container } from 'components/GlobalStyles';\nimport { LoginForm } from 'components/LoginForm';\n\nconst LoginPage = () => {\n  return (\n    <Container>\n      <LoginForm />\n    </Container>\n  );\n};\n\nexport default LoginPage;\n"],"names":["FormWrapper","styled","FormTitle","SignForm","InputWrapper","PasswordInput","Input","LoginInput","RevealerWrapper","SignFormBtn","Button","ErrorText","validationSchema","Yup","shape","email","required","password","min","max","LoginForm","useLoginMutation","login","isLoading","navigate","useNavigate","useState","shown","setShown","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","onSubmit","data","unwrap","then","payload","message","user","name","catch","placeholder","type","onClick","disabled","Spinner","size"],"sourceRoot":""}